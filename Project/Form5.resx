<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>